services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: front-end
    env_file:
      - ./frontend/.env
    environment:
      - VITE_API_URL=/api
    ports:
      - "5173:5173"
    networks: 
      - node-network
    volumes:
      - ./frontend/src:/app/src
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 15s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: back-end
    env_file:
      - ./backend/.env
    environment:
      - PORT=8888
      - DATABASE_URL=mongodb://db:27017/mydb
      - JWT_SECRET=your_secure_secret_here
      - FRONTEND_URL=http://3.144.27.179
    ports:
      - "8888:8888"
    networks: 
      - node-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 15s
      timeout: 5s
      retries: 3

  db:
    image: mongo:6.0
    volumes:
      - mongodb_data:/data/db
    networks:
      - node-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports: 
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks: 
      - node-network
    depends_on:
      - frontend
      - backend

volumes:
  mongodb_data:

networks: 
  node-network:
    driver: bridge